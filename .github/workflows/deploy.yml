name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main
      - develop
      - staging
      - CustomizePromptDeletePrompt
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch || github.ref_name }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/summarizer-bot:${{ github.sha }},${{ secrets.DOCKER_USERNAME }}/summarizer-bot:latest

      - name: Deploy to Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            # Pull the new image
            docker pull ${{ secrets.DOCKER_USERNAME }}/summarizer-bot:${{ github.sha }}
            
            # Stop the old container
            docker stop summarizer-bot || true
            docker rm summarizer-bot || true
            
            # Start the new container with the same env and volume mappings
            docker run -d \
              --name summarizer-bot \
              --restart unless-stopped \
              --env-file ~/SummarizerBot/.env \
              -v ~/SummarizerBot/data:/app/data \
              -v ~/SummarizerBot/temp:/app/temp \
              -v ~/SummarizerBot/recordings:/app/recordings \
              ${{ secrets.DOCKER_USERNAME }}/summarizer-bot:${{ github.sha }}
            
            # Clean up old images
            docker image prune -f 