apiVersion: v1
kind: Secret
metadata:
  name: discord-bot-secrets
type: Opaque
stringData:
  DISCORD_TOKEN: DISCORD_TOKEN_VALUE
  OPENAI_API_KEY: OPENAI_API_KEY_VALUE
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: recordings-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: discord-bot-sa
  annotations:
    iam.gke.io/gcp-service-account: "discord-bot-sa@${PROJECT_ID}.iam.gserviceaccount.com"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: discord-bot
spec:
  selector:
    matchLabels:
      app: discord-bot
  serviceName: discord-bot
  replicas: 1
  template:
    metadata:
      labels:
        app: discord-bot
    spec:
      serviceAccountName: discord-bot-sa
      imagePullSecrets:
      - name: gcr-json-key
      containers:
      - name: discord-bot
        image: gcr.io/lorescribe/discord-bot:latest
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        env:
        - name: DISCORD_TOKEN
          valueFrom:
            secretKeyRef:
              name: discord-bot-secrets
              key: DISCORD_TOKEN
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: discord-bot-secrets
              key: OPENAI_API_KEY
        - name: CLIENT_ID
          value: "1327871663202762843"
        - name: RECORDINGS_PATH
          value: "/recordings"
        - name: REDIS_HOST
          value: "redis"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: redis-password
        volumeMounts:
        - name: recordings
          mountPath: /recordings
      volumes:
      - name: recordings
        persistentVolumeClaim:
          claimName: recordings-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: discord-bot
spec:
  selector:
    app: discord-bot
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP 